{"name": "test_api[data0]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)", "trace": "data = {'前置条件': 'login', '是否执行': 'y', '期望结果': '成功', '状态码': 0.0, ...}\nlogin_token = None\n\n    @pytest.mark.parametrize('data', opExcel.getExcelData()) # 装饰器进行封装用例\n    def test_api(data, login_token=None):\n        if data[ExcelVarles.case_isRun] == \"N\" :\n            logger.info(\"跳过执行用例\")\n            return\n    \n        # 请求头作为空处理并添加token\n        headers = data[ExcelVarles.case_headers]\n        if len(str(headers).split()) == 0:\n            pass\n        elif len(str(headers).split()) >= 0:\n>           headers = json.loads(headers) # 转换为字典\n\ntestCase\\test_api_all.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\ProgramFiles\\Python312\\Lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nD:\\ProgramFiles\\Python312\\Lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000001FCD6C51310>\ns = '{\\\\\"Accpet\\\\\":\\\\\"application/json\\\\\"}', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\n\nD:\\ProgramFiles\\Python312\\Lib\\json\\decoder.py:353: JSONDecodeError"}, "parameters": [{"name": "data", "value": "{'用例ID': 'case_001', '用例模块': '登录', '用例名称': '登录', '用例地址': 'http://192.168.0.205:8099', '请求地址': '/api/hlx-auth/oauth/token', '请求方法': 'post', '请求类型': 'json', '请求参数': 'client_id=web-admin&client_secret=secret&grant_type=password&password=123&username=admin&verifyCode=4444', '请求头': '{\\\\\"Accpet\\\\\":\\\\\"application/json\\\\\"}', '前置条件': 'login', '是否执行': 'y', '状态码': 0.0, '期望结果': '成功'}"}], "start": 1705025391959, "stop": 1705025391959, "uuid": "cb8d1241-96b1-4574-b35d-d3d8266c1363", "historyId": "15aef11e3941be9a3cb47644c9a7cd33", "testCaseId": "40888e76ac1846f3c895e804783ded84", "fullName": "testCase.test_api_all#test_api", "labels": [{"name": "parentSuite", "value": "testCase"}, {"name": "suite", "value": "test_api_all"}, {"name": "host", "value": "DESKTOP-K4I75MC"}, {"name": "thread", "value": "34440-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.test_api_all"}]}